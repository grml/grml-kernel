From: Ben Hutchings <ben@decadent.org.uk>
Date: Mon, 28 Sep 2015 01:34:21 +0100
Subject: rtsx_usb_ms: Use msleep_interruptible() in polling loop
Bug-Debian: https://bugs.debian.org/765717
Forwarded: http://mid.gmane.org/1443400461.2517.22.camel@decadent.org.uk

rtsx_usb_ms creates a task that mostly sleeps, but tasks in
uninterruptible sleep still contribute to the load average (for
bug-compatibility with Unix).  A load average of ~1 on a system that
should be idle is somewhat alarming.

Change the sleep to be interruptible, but still ignore signals.

A better fix might be to replace this loop with a delayed work item.

References: https://bugs.debian.org/765717
Signed-off-by: Ben Hutchings <ben@decadent.org.uk>
---
--- a/drivers/memstick/host/rtsx_usb_ms.c
+++ b/drivers/memstick/host/rtsx_usb_ms.c
@@ -706,7 +706,8 @@ poll_again:
 		if (host->eject)
 			break;
 
-		msleep(1000);
+		if (msleep_interruptible(1000))
+			flush_signals(current);
 	}
 
 	complete(&host->detect_ms_exit);
